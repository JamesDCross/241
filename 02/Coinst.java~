import java.util.*;
import java.util.Random;
import java.util.stream.Collectors;//remember

public class Coinst{

    private boolean[] coins;
	
    public Coinst(boolean[] coins) {
        this.coins = coins;
    }


    public int countHeads(){
        int counter = 0;
        for(int i = 0; i < coins.length; i++){
            if(coins[i]){
                counter++;
            }
        }
        return counter;
    }

    public String toString(){
        String [] sa = new String [coins.length];
        for(int i = 0; i < coins.length; i++){
            if(coins[i]){
                sa[i] = "H";
            }else if(!coins[i]){
                sa[i] = "T";
            }
        }
        String s = Arrays.stream(sa).collect(Collectors.joining());
        return (s);
    }

    public Coinst (String c){
        char[] sc = c.toCharArray();
        this.coins = new boolean [sc.length];
        for(int i = 0; i < coins.length; i++){
            if(sc[i] == 'H'){
                coins[i] = true;
            }else if (sc[i] == 'T'){
                coins[i] = false;
            }
        } //slightly unsure
    }

    public Coinst (int length){
        this.coins = new boolean[length];
        Random r = new Random();
        for(int i = 0; i < coins.length; i++){
            coins[i] = r.nextBoolean();
        }
    }//fractionally unsure, not really

    public int countRuns(){
        boolean b = coins[0];
        int counter = 0;
        for(int i = 1; i < coins.length - 1; i++){
            if(coins[i] == coins[i + 1]){
            }else if (coins[i] != coins[i + 1]){
                counter ++;
                b = coins[i + 1];
            }
        }
        counter ++;
        return counter;
    }
}
            
        
            
